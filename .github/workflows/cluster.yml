name: Redis Cluster

on: [push]

jobs:

  cluster:
    name: Cluster ${{ matrix.redis }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        redis: ['4.0.14', '6.2.0', '7.0.3']
    
    services:
      fix-redis-volume-ownership: # This service is to authorise redis-master with ownership permissions
        image: 'bitnami/redis:latest'
        user: root
        command: chown -R 1001:1001 /bitnami
        volumes:
          - ./data/redis:/bitnami
          - ./data/redis/conf/redis.conf:/opt/bitnami/redis/conf/redis.conf

      redis-master: # Setting up master node
        image: 'bitnami/redis:latest'
        ports:
          - '6329:6379' # Port 6329 will be exposed to handle connections from outside server 
        environment:
          - REDIS_REPLICATION_MODE=master # Assigning the node as a master
          - ALLOW_EMPTY_PASSWORD=yes # No password authentication required/ provide password if needed
        volumes:
          - ./data/redis:/bitnami # Redis master data volume
          - ./data/redis/conf/redis.conf:/opt/bitnami/redis/conf/redis.conf # Redis master configuration volume


      redis-replica: # Setting up slave node
        image: 'bitnami/redis:latest'
        ports:
          - '6379' # No port is exposed 
        depends_on:
          - redis-master # will only start after the master has booted completely
        environment:
          - REDIS_REPLICATION_MODE=slave # Assigning the node as slave
          - REDIS_MASTER_HOST=redis-master # Host for the slave node is the redis-master node
          - REDIS_MASTER_PORT_NUMBER=6379 # Port number for local 
          - ALLOW_EMPTY_PASSWORD=yes # No password required to connect to node

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # TODO: Start a Redis Cluster
      #   - Use ${{ matrix.redis }} for version
      #   - Must have at least 3 primary nodes with 1 replica each
      #   - Cluster must require a password for connections
      #   - Is `bitnami/redis-cluster` a good choice?
      - name: Start Redis Cluster
        run: whoami


      - name: Install dependencies
        run: sudo apt-get install -y redis-tools

      - name: Health Check
        # TODO: Adjust ips/ports if needed
        run: redis-cli -p 5000 cluster nodes

      - name: Test PHP connection
        env:
          # TODO: Adjust ips/ports if needed
          REDIS_PRIMARIES: 127.0.0.1:5000,127.0.0.1:5001,127.0.0.1:5002
          REDIS_AUTH: secret
        run: php cluster.php
  
